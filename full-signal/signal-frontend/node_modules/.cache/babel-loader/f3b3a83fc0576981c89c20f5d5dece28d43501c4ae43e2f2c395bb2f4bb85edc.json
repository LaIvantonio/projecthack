{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0420\\u0418\\u041D\\u0425\\u0430\\u043A 2023\\\\svadba\\\\projecthack\\\\full-signal\\\\signal-frontend\\\\src\\\\components\\\\Info\\\\Info.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport style from './Info.module.scss';\nimport { ChangeContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Info = () => {\n  _s();\n  const [radioValue, setRadioValue] = useState(\"Операционная система\");\n  const {\n    networkInfo\n  } = useContext(ChangeContext);\n  const getInfo = () => {\n    let outputInfo = [];\n    if (radioValue === \"Операционная система\") {\n      for (const property in networkInfo[0]) {\n        if (networkInfo[0][property] !== undefined) {\n          outputInfo.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: property\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 25\n            }, this), `: ${networkInfo[0][property]}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 22\n          }, this));\n        }\n      }\n    } else if (radioValue === \"Устройства\") {\n      networkInfo[1].forEach(device => {\n        for (const property in device) {\n          if (device[property] !== undefined && property !== \"Name\") {\n            outputInfo.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: property\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 26\n              }, this), `: ${device[property]}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 23\n            }, this));\n          } else if (device[property] !== undefined && property === \"Name\") {\n            outputInfo.push( /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: `${property}: ${device[property]}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 23\n            }, this));\n          }\n          if (property === \"Type\") {\n            outputInfo.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 23\n            }, this));\n          }\n        }\n      });\n    } else if (radioValue === \"Установленное ПО\") {\n      networkInfo[2].forEach(device => {\n        for (const property in device) {\n          if (device[property] !== undefined) {\n            outputInfo.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: property\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 26\n              }, this), `: ${device[property]}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this));\n          }\n          if (property === \"version\") {\n            outputInfo.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 23\n            }, this));\n          }\n        }\n      });\n    }\n    return outputInfo;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: networkInfo !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0421\\u0435\\u0440\\u0438\\u0439\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: networkInfo[3].bios_serial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : \"Окно \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.parameters,\n      children: networkInfo !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Операционная система\", \"Устройства\", \"Установленное ПО\"].map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"parameters\",\n            value: option,\n            checked: option === radioValue,\n            onChange: () => setRadioValue(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: option,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this))\n      }, void 0, false) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.reportContainer,\n      children: networkInfo !== null ? getInfo() : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0417\\u0434\\u0435\\u0441\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0430\\u0442\\u044C\\u0441\\u044F \\u0412\\u0430\\u0448 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u043E\\u0442\\u0447\\u0451\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 2\n  }, this);\n};\n_s(Info, \"vwp7rq6quayCKKpHLw6OBXtSzvE=\");\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useContext","useState","style","ChangeContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Info","_s","radioValue","setRadioValue","networkInfo","getInfo","outputInfo","property","undefined","push","children","fileName","_jsxFileName","lineNumber","columnNumber","forEach","device","className","container","bios_serial","parameters","map","option","type","name","value","checked","onChange","htmlFor","reportContainer","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Рабочий стол/РИНХак 2023/svadba/projecthack/full-signal/signal-frontend/src/components/Info/Info.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport style from './Info.module.scss'\r\nimport { ChangeContext } from '../../App';\r\n\r\nexport const Info = () => {\r\n\tconst [radioValue, setRadioValue] = useState(\"Операционная система\");\r\n\r\n\tconst {networkInfo} = useContext(ChangeContext);\r\n\r\n\tconst getInfo = () => {\r\n\t\tlet outputInfo = [];\r\n\t\tif (radioValue === \"Операционная система\") {\r\n\t\t\tfor (const property in networkInfo[0]) {\r\n\t\t\t\tif (networkInfo[0][property] !== undefined) {\r\n\t\t\t\t\toutputInfo.push(<p><span>{property}</span>{`: ${networkInfo[0][property]}`}</p>);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (radioValue === \"Устройства\") {\r\n\t\t\tnetworkInfo[1].forEach(device => {\r\n\t\t\t\tfor (const property in device) {\r\n\t\t\t\t\tif (device[property] !== undefined && property !== \"Name\") {\r\n\t\t\t\t\t\toutputInfo.push(<p><span>{property}</span>{`: ${device[property]}`}</p>);\r\n\t\t\t\t\t} else if (device[property] !== undefined && property === \"Name\")  {\r\n\t\t\t\t\t\toutputInfo.push(<h3>{`${property}: ${device[property]}`}</h3>);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (property === \"Type\") {\r\n\t\t\t\t\t\toutputInfo.push(<br></br>);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (radioValue === \"Установленное ПО\") {\r\n\t\t\tnetworkInfo[2].forEach(device => {\r\n\t\t\t\tfor (const property in device) {\r\n\t\t\t\t\tif (device[property] !== undefined) {\r\n\t\t\t\t\t\toutputInfo.push(<p><span>{property}</span>{`: ${device[property]}`}</p>);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (property === \"version\") {\r\n\t\t\t\t\t\toutputInfo.push(<br></br>);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn outputInfo;\r\n\t}\r\n\r\n  return (\r\n\t<div className={style.container}>\r\n\t\t<h4>\r\n\t\t\t{\r\n\t\t\t\tnetworkInfo !== null ? \r\n\t\t\t\t<>Серийный номер<span>{networkInfo[3].bios_serial}</span></> : \r\n\t\t\t\t\"Окно \"\r\n\t\t\t}\r\n\t\t</h4>\r\n\t\t<div className={style.parameters}>\r\n\t\t\t{\r\n\t\t\t\tnetworkInfo !== null ? \r\n\t\t\t\t<>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t[\"Операционная система\", \"Устройства\", \"Установленное ПО\"].map((option) => (\r\n\t\t\t\t\t\t\t<div key={option}>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\t\t\tname='parameters'\r\n\t\t\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t\t\t\tchecked={option === radioValue}\r\n\t\t\t\t\t\t\t\t\tonChange={() => setRadioValue(option)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor={option}>{option}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t<div className={style.reportContainer}>\r\n\t\t\t{networkInfo !== null ? getInfo() : <p>Здесь будет отображаться Ваш <span>отчёт</span></p>}\r\n\t\t</div>\r\n\t</div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}